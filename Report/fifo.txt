First FIFO try, common clock domain for read and write (working post route simulation):
Clock is connected to 100 MHz User Clock

entity fifo_tl is PORT (
    clk_i : IN STD_LOGIC; --- mapped to user clock (FPGA reference X1)
    rst_i : IN STD_LOGIC; -- mapped to C (center button)
    din_i : IN STD_LOGIC_VECTOR(7 DOWNTO 0); -- mapped to GPIO DIP Switches
    wr_en_i : IN STD_LOGIC; -- mapped to SW 10 (upper button)
    rd_en_i : IN STD_LOGIC; -- mapped to SW 11 (lower button)
    dout_o : OUT STD_LOGIC_VECTOR(7 DOWNTO 0); -- mapped to gpio LEDs
    full_o : OUT STD_LOGIC; -- error LED
    empty_o : OUT STD_LOGIC; -- error LED
    underflow_o : OUT STD_LOGIC; -- not mapped
    valid_o : OUT STD_LOGIC; -- not mapped
	 data_count_o : OUT STD_LOGIC_VECTOR(15 DOWNTO 0) -- not mapped
  );
end fifo_tl;


Second FIFO try, two different clock domains for read and write (working post route simulation available)
entity FIFO_asynch_tl is PORT (
		 rst_i : IN STD_LOGIC;
		 wr_clk_i : IN STD_LOGIC;
		 rd_clk_i : IN STD_LOGIC;
		 din_i : IN STD_LOGIC_VECTOR(7 DOWNTO 0);
		 wr_en_i : IN STD_LOGIC;
		 rd_en_i : IN STD_LOGIC;
		 dout_o : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
		 full_o : OUT STD_LOGIC;
		 empty_o : OUT STD_LOGIC;
		 valid_o : OUT STD_LOGIC;
		 underflow_o : OUT STD_LOGIC;
		 rd_data_count_o : OUT STD_LOGIC_VECTOR(15 DOWNTO 0);
		 wr_data_count_o : OUT STD_LOGIC_VECTOR(15 DOWNTO 0)
	  );
end FIFO_asynch_tl;

Write clock is connected to 100 MHz User Clock,
read clok is connected to 33 MHz clock generator. 
(details in data sheet, p. 19/20)


FIFO alternative: Video Frame Buffer Controller (writes data directly on external memory)
data sheet mpmc, p 177 ff.

VFBC PIM I/O Signals with more information found p. 37 ff.
1. The VFBC Reset and Flush inputs must be held high for at least two MPMC_Clk0 cycles. Because these inputs could be controlled from a different
clock domain than the MPMC_Clk0, the relative frequency of the reset/flush clock domain must be taken into account when determining the number
of clock cycles to assert the reset or flush and to wait after reset or flush. The following equation is used to determine the number of clock cycles to
hold the reset or flush input high: 2*(VFBC_Clk_Freq/MPMC_Clk0_Freq)
2. After reset, there should not be any accesses to the VFBC interfaces for 6 MPMC_Clk cycles.
3. After flush, there should not be any accesses to the VFBC interfaces for 6 MPMC_Clk cycles.


